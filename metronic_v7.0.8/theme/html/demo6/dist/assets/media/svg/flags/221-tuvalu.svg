<?xml version="1.0" encoding="iso-8859-1"?>
<!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve">
<rect style="fill:#3CC8FF;" width="512" height="512"/>
<g>
	<path style="fill:#FFE15A;" d="M288.558,410.977l4.297,12.884l13.581,0.105c1.758,0.014,2.487,2.258,1.073,3.302l-10.925,8.068   l4.097,12.949c0.53,1.676-1.378,3.063-2.809,2.041l-11.049-7.897l-11.049,7.897c-1.431,1.022-3.339-0.364-2.809-2.041l4.097-12.949   l-10.925-8.068c-1.414-1.044-0.685-3.288,1.073-3.302l13.581-0.105l4.297-12.884C285.643,409.309,288.002,409.309,288.558,410.977z   "/>
	<path style="fill:#FFE15A;" d="M413.557,313.767l4.297,12.884l13.581,0.105c1.758,0.014,2.487,2.258,1.073,3.302l-10.925,8.068   l4.097,12.949c0.53,1.676-1.378,3.063-2.809,2.041l-11.049-7.897l-11.049,7.897c-1.43,1.022-3.339-0.364-2.809-2.041l4.097-12.949   l-10.925-8.068c-1.414-1.045-0.685-3.288,1.073-3.302l13.581-0.105l4.297-12.884C410.642,312.099,413.001,312.099,413.557,313.767z   "/>
	<path style="fill:#FFE15A;" d="M472.497,277.641l4.297,12.884l13.581,0.105c1.758,0.014,2.487,2.258,1.073,3.302L480.523,302   l4.097,12.949c0.53,1.676-1.378,3.063-2.809,2.041l-11.049-7.897l-11.049,7.897c-1.43,1.022-3.339-0.364-2.809-2.041L461,302   l-10.925-8.068c-1.414-1.045-0.685-3.288,1.073-3.302l13.581-0.105l4.297-12.884C469.582,275.973,471.941,275.973,472.497,277.641z   "/>
	<path style="fill:#FFE15A;" d="M458.436,153.693l4.297,12.884l13.581,0.105c1.758,0.014,2.487,2.258,1.073,3.302l-10.925,8.068   l4.097,12.949c0.53,1.676-1.378,3.063-2.809,2.041l-11.049-7.897l-11.049,7.897c-1.43,1.022-3.339-0.364-2.809-2.041l4.097-12.949   l-10.925-8.068c-1.414-1.045-0.685-3.288,1.073-3.302l13.581-0.105l4.297-12.884C455.52,152.025,457.88,152.025,458.436,153.693z"/>
	<path style="fill:#FFE15A;" d="M340.811,443.174l-4.297-12.884l-13.581-0.105c-1.758-0.014-2.487-2.258-1.073-3.302l10.925-8.068   l-4.097-12.949c-0.53-1.676,1.378-3.063,2.809-2.041l11.049,7.897l11.049-7.897c1.43-1.022,3.339,0.364,2.809,2.041l-4.097,12.949   l10.925,8.068c1.414,1.045,0.685,3.288-1.073,3.302l-13.581,0.105l-4.297,12.884C343.726,444.842,341.367,444.842,340.811,443.174z   "/>
	<path style="fill:#FFE15A;" d="M381.432,406.719l-4.297-12.884l-13.581-0.105c-1.758-0.014-2.487-2.258-1.073-3.302l10.925-8.068   l-4.097-12.949c-0.53-1.676,1.378-3.063,2.809-2.041l11.049,7.897l11.049-7.897c1.43-1.022,3.339,0.364,2.809,2.041l-4.097,12.949   l10.925,8.068c1.414,1.044,0.685,3.288-1.073,3.302l-13.581,0.105l-4.297,12.884C384.348,408.387,381.989,408.387,381.432,406.719z   "/>
	<path style="fill:#FFE15A;" d="M417.988,247.719l-4.297-12.884l-13.581-0.105c-1.758-0.014-2.487-2.258-1.073-3.302l10.925-8.068   l-4.097-12.949c-0.53-1.676,1.378-3.063,2.809-2.041l11.049,7.897l11.049-7.897c1.43-1.022,3.339,0.364,2.809,2.041l-4.097,12.949   l10.925,8.068c1.414,1.045,0.685,3.288-1.073,3.302l-13.581,0.105l-4.297,12.884C420.904,249.387,418.544,249.387,417.988,247.719z   "/>
	<path style="fill:#FFE15A;" d="M375.804,261.26l-4.297-12.884l-13.581-0.105c-1.758-0.014-2.487-2.258-1.073-3.302l10.925-8.068   l-4.097-12.949c-0.53-1.676,1.378-3.063,2.809-2.041l11.049,7.897l11.049-7.897c1.431-1.022,3.339,0.364,2.809,2.041l-4.097,12.949   l10.925,8.068c1.414,1.045,0.685,3.288-1.073,3.302l-13.581,0.105l-4.297,12.884C378.719,262.928,376.36,262.928,375.804,261.26z"/>
	<path style="fill:#FFE15A;" d="M348.796,366.444l-4.297-12.884l-13.581-0.105c-1.758-0.014-2.487-2.258-1.073-3.302l10.925-8.068   l-4.097-12.949c-0.53-1.676,1.378-3.063,2.809-2.041l11.049,7.897l11.049-7.897c1.431-1.022,3.339,0.364,2.809,2.041l-4.097,12.949   l10.925,8.068c1.414,1.045,0.685,3.288-1.073,3.302l-13.581,0.105l-4.297,12.884C351.712,368.112,349.353,368.112,348.796,366.444z   "/>
</g>
<g>
	<polygon style="fill:#41479B;" points="94.316,0 0,0 0,19.977 94.316,81.77  "/>
	<polygon style="fill:#41479B;" points="0,68.299 0,94.316 39.71,94.316  "/>
	<polygon style\t\t\t\treturn code - NUMBER + 26 + 26\n\t\t\tif (code < UPPER + 26)\n\t\t\t\treturn code - UPPER\n\t\t\tif (code < LOWER + 26)\n\t\t\t\treturn code - LOWER + 26\n\t\t}\n\n\t\tfunction b64ToByteArray (b64) {\n\t\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\t\tif (b64.length % 4 > 0) {\n\t\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t\t}\n\n\t\t\t// the number of equal signs (place holders)\n\t\t\t// if there are two placeholders, than the two characters before it\n\t\t\t// represent one byte\n\t\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t\t// this is just a cheap hack to not do indexOf twice\n\t\t\tvar len = b64.length\n\t\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t\t// base64 is 4/3 + up to two characters of the original data\n\t\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\t\tvar L = 0\n\n\t\t\tfunction push (v) {\n\t\t\t\tarr[L++] = v\n\t\t\t}\n\n\t\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\n\t\t\tif (placeHolders === 2) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t} else if (placeHolders === 1) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\n\t\t\treturn arr\n\t\t}\n\n\t\tfunction uint8ToBase64 (uint8) {\n\t\t\tvar i,\n\t\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\t\toutput = \"\",\n\t\t\t\ttemp, length\n\n\t\t\tfunction encode (num) {\n\t\t\t\treturn lookup.charAt(num)\n\t\t\t}\n\n\t\t\tfuncti
UInt16(code);\n\t          }\n\t          for (_o = 0, _len5 = deltas.length; _o < _len5; _o++) {\n\t            delta = deltas[_o];\n\t            subtable.writeUInt16(delta);\n\t          }\n\t          for (_p = 0, _len6 = rangeOffsets.length; _p < _len6; _p++) {\n\t            offset = rangeOffsets[_p];\n\t            subtable.writeUInt16(offset);\n\t          }\n\t          for (_q = 0, _len7 = glyphIDs.length; _q < _len7; _q++) {\n\t            id = glyphIDs[_q];\n\t            subtable.writeUInt16(id);\n\t          }\n\t          return result = {\n\t            charMap: charMap,\n\t            subtable: subtable.data,\n\t            maxGlyphID: nextID + 1\n\t          };\n\t      }\n\t    };\n\n\t    return CmapEntry;\n\n\t  })();\n\n\t  module.exports = CmapTable;\n\n\t}).call(this);\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var Data, HmtxTable, Table,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n\t  Table = __webpack_require__(76);\n\n\t  Data = __webpack_require__(72);\n\n\t  HmtxTable = (function(_super) {\n\t    __extends(HmtxTable, _super);\n\n\t    function HmtxTable() {\n\t      return HmtxTable.__super__.constructor.apply(this, arguments);\n\t    }\n\n\t    HmtxTable.prototype.tag = 'hmtx';\n\n\t    HmtxTable.prototype.parse = function(data) {\n\t      var i, last, lsbCount, m, _i, _j, _ref, _results;\n\t      data.pos = this.offset;\n\t      this.metrics = [];\n\t      for (i = _i = 0, _ref = this.file.hhea.numberOfMetrics; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n\t        this.metrics.push({\n\t          advance: data.readUInt16(),\n\t          lsb: data.readInt16()\n\t        });\n\t      }\n\t      lsbCount = this.f
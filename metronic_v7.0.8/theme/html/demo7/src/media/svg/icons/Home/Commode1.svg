: vv = cell.v; break;
    }
    var v = writetag('v', escapexml(vv)), o = {r:ref};
    /* TODO: cell style */
    var os = get_cell_style(opts.cellXfs, cell, opts);
    if(os !== 0) o.s = os;
    switch(cell.t) {
        case 'n': break;
        case 'd': o.t = "d"; break;
        case 'b': o.t = "b"; break;
        case 'e': o.t = "e"; break;
        default:
            if(opts.bookSST) {
                v = writetag('v', ''+get_sst_id(opts.Strings, cell.v));
                o.t = "s"; break;
            }
            o.t = "str"; break;
    }
    if(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }
    return writextag('c', v, o);
}

var parse_ws_xml_data = (function parse_ws_xml_data_factory() {
    var cellregex = /<(?:\w+:)?c[ >]/, rowregex = /<\/(?:\w+:)?row>/;
    var rregex = /r=["']([^"']*)["']/, isregex = /<is>([\S\s]*?)<\/is>/;
    var match_v = matchtag("v"), match_f = matchtag("f");

return function parse_ws_xml_data(sdata, s, opts, guess) {
    var ri = 0, x = "", cells = [], cref = [], idx = 0, i=0, cc=0, d="", p;
    var tag, tagr = 0, tagc = 0;
    var sstr;
    var fmtid = 0, fillid = 0, do_format = Array.isArray(styles.CellXf), cf;
    for(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {
        x = marr[mt].trim();
        var xlen = x.length;
        if(xlen === 0) continue;

        /* 18.3.1.73 row CT_Row */
        for(ri